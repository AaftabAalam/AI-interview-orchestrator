{"ast":null,"code":"var _jsxFileName = \"/Users/apple/ml-setup/ML/interview scheduling app/frontend/interview_scheduling/src/HomePage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = ({\n  handleNotification\n}) => {\n  _s();\n  const [slots, setSlots] = useState([]);\n  useEffect(() => {\n    const fetchSlots = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/slots\");\n        const data = await response.json();\n        setSlots(data);\n      } catch (error) {\n        handleNotification('Failed to load available slots');\n      }\n    };\n    fetchSlots();\n  }, [handleNotification]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"homepage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Interview Slots\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), slots.length == 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No slots available at the moment. Please check back later.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: slots.map(slot => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [slot.date, \" - \", slot.time, /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/schedule\",\n          state: {\n            slot\n          },\n          className: \"schedule-link\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }, this)]\n      }, slot.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/reschedule\",\n      className: \"reschedule-link\",\n      children: \"Reschedule Interview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"2UqXCi85+ev3OjCCdaN74aZmXow=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","Link","jsxDEV","_jsxDEV","HomePage","handleNotification","_s","slots","setSlots","fetchSlots","response","fetch","data","json","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","slot","date","time","to","state","id","_c","$RefreshReg$"],"sources":["/Users/apple/ml-setup/ML/interview scheduling app/frontend/interview_scheduling/src/HomePage.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {Link} from 'react-router-dom';\n\n\nconst HomePage = ({handleNotification}) => {\n    const [slots, setSlots] = useState([]);\n\n    useEffect(()=> {\n        const fetchSlots = async()=> {\n            try{\n                const response = await fetch(\"http://localhost:8000/slots\");\n                const data = await response.json();\n                setSlots(data);\n            }   catch(error){\n                handleNotification('Failed to load available slots');\n            }\n        };\n        fetchSlots();\n    }, [handleNotification]);\n\n    return(\n        <div className=\"homepage\">\n            <h2>Available Interview Slots</h2>\n            {slots.length == 0?(\n                <p>No slots available at the moment. Please check back later.</p>\n            ):(\n                <ul>\n                    {slots.map((slot)=> (\n                        <li key={slot.id}>\n                            {slot.date} - {slot.time}\n                            <Link to=\"/schedule\" state={{slot}} className='schedule-link'></Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n            <Link to='/reschedule' className='reschedule-link'>Reschedule Interview</Link>\n        </div>\n    );\n};\n\nexport default HomePage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGtC,MAAMC,QAAQ,GAAGA,CAAC;EAACC;AAAkB,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAK;IACX,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAU;MACzB,IAAG;QACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,QAAQ,CAACI,IAAI,CAAC;MAClB,CAAC,CAAG,OAAME,KAAK,EAAC;QACZT,kBAAkB,CAAC,gCAAgC,CAAC;MACxD;IACJ,CAAC;IACDI,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACJ,kBAAkB,CAAC,CAAC;EAExB,oBACIF,OAAA;IAAKY,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACrBb,OAAA;MAAAa,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjCb,KAAK,CAACc,MAAM,IAAI,CAAC,gBACdlB,OAAA;MAAAa,QAAA,EAAG;IAA0D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjEjB,OAAA;MAAAa,QAAA,EACKT,KAAK,CAACe,GAAG,CAAEC,IAAI,iBACZpB,OAAA;QAAAa,QAAA,GACKO,IAAI,CAACC,IAAI,EAAC,KAAG,EAACD,IAAI,CAACE,IAAI,eACxBtB,OAAA,CAACF,IAAI;UAACyB,EAAE,EAAC,WAAW;UAACC,KAAK,EAAE;YAACJ;UAAI,CAAE;UAACR,SAAS,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFhEG,IAAI,CAACK,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP,eACDjB,OAAA,CAACF,IAAI;MAACyB,EAAE,EAAC,aAAa;MAACX,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7E,CAAC;AAEd,CAAC;AAACd,EAAA,CAlCIF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}