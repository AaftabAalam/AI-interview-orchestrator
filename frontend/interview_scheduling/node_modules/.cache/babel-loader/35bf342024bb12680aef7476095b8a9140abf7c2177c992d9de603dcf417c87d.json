{"ast":null,"code":"var _jsxFileName = \"/Users/apple/ml-setup/ML/interview scheduling app/frontend/interview_scheduling/src/ScheduleInterview.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScheduleInterview = ({\n  handleNotification\n}) => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    slot\n  } = location.state || {};\n  const [candidateName, setCandidateName] = useState('');\n  const [candidateEmail, setCandidateEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const interviewDetails = {\n      name: candidateName,\n      email: candidateEmail,\n      slotId: slot.id\n    };\n    try {\n      const response = await fetch(\"http://localhost:8000/schedule\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(interviewDetails)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to schedule the interview.\");\n      }\n      const data = await response.json();\n      handleNotification(`Interview scheduled successfully for ${data.name} on ${slot.date} at ${slot.time}.`);\n      navigate('/');\n    } catch (error) {\n      handleNotification(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"schedule-interview\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Schedule Interview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), slot ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: candidateName,\n          onChange: e => setCandidateName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: candidateEmail,\n          onChange: e => setCandidateEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Selected Slot: \", slot.date, \" at \", slot.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? 'Scheduling...' : 'Schedule Interview'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No slot Selected. Please select a slot from the home page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ScheduleInterview, \"PTZUCDPS/TY7OHal7TbE+tuntm0=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ScheduleInterview;\nexport default ScheduleInterview;\nvar _c;\n$RefreshReg$(_c, \"ScheduleInterview\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","ScheduleInterview","handleNotification","_s","location","navigate","slot","state","candidateName","setCandidateName","candidateEmail","setCandidateEmail","loading","setLoading","handleSubmit","e","preventDefault","interviewDetails","name","email","slotId","id","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","date","time","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["/Users/apple/ml-setup/ML/interview scheduling app/frontend/interview_scheduling/src/ScheduleInterview.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {useLocation, useNavigate} from 'react-router-dom';\n\nconst ScheduleInterview = ({handleNotification}) => {\n    const location = useLocation();\n    const navigate = useNavigate();\n    const {slot} = location.state || {};\n\n    const [candidateName, setCandidateName] = useState('');\n    const [candidateEmail, setCandidateEmail] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleSubmit = async(e)=> {\n        e.preventDefault();\n        setLoading(true);\n        const interviewDetails = {\n            name : candidateName,\n            email : candidateEmail,\n            slotId : slot.id,\n        };\n        try{\n            const response = await fetch(\"http://localhost:8000/schedule\",{\n                method : 'POST',\n                headers : {\n                    'Content-Type':'application/json',\n                },\n                body : JSON.stringify(interviewDetails),\n            });\n\n            if (!response.ok){\n                throw new Error(\"Failed to schedule the interview.\");\n            }\n            const data = await response.json();\n            handleNotification(`Interview scheduled successfully for ${data.name} on ${slot.date} at ${slot.time}.`);\n            navigate('/');\n        }   catch(error){\n            handleNotification(error.message);\n        }   finally {\n            setLoading(false);\n        }\n    };\n    return(\n        <div className='schedule-interview'>\n            <h2>Schedule Interview</h2>\n            {slot? (\n                <form onSubmit={handleSubmit}> \n                    <div>\n                        <label>Name:</label>\n                        <input type='text' value={candidateName} onChange={(e)=> setCandidateName(e.target.value)} required />\n                    </div>\n                    <div>\n                        <label>Email:</label>\n                        <input type='email'\n                        value={candidateEmail}\n                        onChange={(e)=> setCandidateEmail(e.target.value)}\n                        required />\n                    </div>\n                    <div>\n                        <p>Selected Slot: {slot.date} at {slot.time}</p>\n                    </div>\n                    <button type='submit'\n                    disabled={loading}>\n                        {loading? 'Scheduling...':'Schedule Interview'}\n                    </button>\n                </form>\n            ):(\n                <p>No slot Selected. Please select a slot from the home page.</p>\n            )}\n        </div>\n    );\n};\nexport default ScheduleInterview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}